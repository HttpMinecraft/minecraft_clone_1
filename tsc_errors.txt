

src/keyinput.js:67:36 - error TS2576: Property 'KEY' does not exist on type 'KeyEvent'. Did you mean to access the static member 'KeyEvent.KEY' instead?

67     var down_o = this.mode == this.KEY ? ki.key_down : ki.code_down;
                                      ~~~




src/renderer/face_culling.js:12:30 - error TS2304: Cannot find name 'Game'.

12    * @param {GameComponent | Game} game
                                ~~~~








src/utils/array_utils.js:172:3 - error TS2322: Type '(a: number, b: number) => 0 | 1 | -1' is not assignable to type '(item: S, v: T) => 0 | 1 | -1'.
  Types of parameters 'a' and 'item' are incompatible.
    Type 'S' is not assignable to type 'number'.

172   threeWayCmp ??= numCmp;
      ~~~~~~~~~~~



src/utils/deep_merge.js:27:23 - error TS8032: Qualified name 'cnf.weakObjTypes' is not allowed without a leading '@param {object} cnf'.

27  * @param {Array<*>} [cnf.weakObjTypes=[Object]]
                         ~~~~~~~~~~~~~~~~

src/utils/deep_merge.js:28:16 - error TS8032: Qualified name 'cnf.protoOverride' is not allowed without a leading '@param {object} cnf'.

28  * @param {*} [cnf.protoOverride] override constructor of result
                  ~~~~~~~~~~~~~~~~~

src/utils/deep_merge.js:29:16 - error TS8032: Qualified name 'cnf.ctorOverride' is not allowed without a leading '@param {object} cnf'.

29  * @param {*} [cnf.ctorOverride] override prototype of result
                  ~~~~~~~~~~~~~~~~

src/utils/deep_merge.js:30:22 - error TS8032: Qualified name 'cnf.deepSetItems' is not allowed without a leading '@param {object} cnf'.

30  * @param {boolean} [cnf.deepSetItems] copy items in Set?
                        ~~~~~~~~~~~~~~~~

src/utils/deep_merge.js:156:22 - error TS2339: Property 'dontMerge' does not exist on type 'SymbolConstructor'.

156     objs = [{[Symbol.dontMerge]: true}, objs.at(-1)];
                         ~~~~~~~~~

src/utils/deep_merge.js:189:25 - error TS2367: This condition will always return 'true' since the types 'string' and 'number' have no overlap.

189     if(_dontMerge(o) && i !== objs.length-1){ continue; }
                            ~~~~~~~~~~~~~~~~~~~

src/utils/deep_merge.js:214:21 - error TS2339: Property 'dontMerge' does not exist on type 'SymbolConstructor'.

214   return o?.[Symbol.dontMerge];
                        ~~~~~~~~~

src/utils/gl_utils.js:6:21 - error TS2339: Property 'getContext' does not exist on type 'HTMLElement'.

6   const gl = canvas.getContext("webgl");
                      ~~~~~~~~~~

src/utils/gl_utils.js:20:40 - error TS2740: Type '{ new (): WebGLRenderingContext; prototype: WebGLRenderingContext; readonly ACTIVE_ATTRIBUTES: number; readonly ACTIVE_TEXTURE: number; ... 293 more ...; readonly ZERO: number; }' is missing the following properties from type 'WebGLRenderingContextBase': canvas, drawingBufferHeight, drawingBufferWidth, activeTexture, and 117 more.

20 export function glErrnoToMsg(errno, gl=WebGLRenderingContext){
                                          ~~~~~~~~~~~~~~~~~~~~~

  src/utils/gl_utils.js:20:40
    20 export function glErrnoToMsg(errno, gl=WebGLRenderingContext){
                                              ~~~~~~~~~~~~~~~~~~~~~
    Did you mean to use 'new' with this expression?

src/utils/gl_utils.js:158:11 - error TS2339: Property 'fetchPriority' does not exist on type 'HTMLImageElement'.

158     image.fetchPriority = prio;
              ~~~~~~~~~~~~~

src/utils/object_utils.js:22:49 - error TS2769: No overload matches this call.
  Overload 1 of 2, '(...items: ConcatArray<string>[]): string[]', gave the following error.
    Argument of type 'symbol[]' is not assignable to parameter of type 'ConcatArray<string>'.
      The types returned by 'slice(...)' are incompatible between these types.
        Type 'symbol[]' is not assignable to type 'string[]'.
          Type 'symbol' is not assignable to type 'string'.
  Overload 2 of 2, '(...items: (string | ConcatArray<string>)[]): string[]', gave the following error.
    Argument of type 'symbol[]' is not assignable to parameter of type 'string | ConcatArray<string>'.
      Type 'symbol[]' is not assignable to type 'string'.

22   return Object.getOwnPropertyNames(obj).concat(Object.getOwnPropertySymbols(obj))
                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


src/utils/str_utils.js:6:21 - error TS8032: Qualified name 'opts.start' is not allowed without a leading '@param {object} opts'.

6  * @param {boolean} opts.start - trim from start?
                      ~~~~~~~~~~

src/utils/str_utils.js:7:21 - error TS8032: Qualified name 'opts.end' is not allowed without a leading '@param {object} opts'.

7  * @param {boolean} opts.end - trim from end?
                      ~~~~~~~~

src/world/base_generator.js:22:12 - error TS2304: Cannot find name 'SeedFork'.

22     return SeedFork.getSeed(this.globSeed, name, i ?? 0);
              ~~~~~~~~

src/world/base_generator.js:26:12 - error TS2304: Cannot find name 'SeedFork'.

26     return SeedFork.getSeeds(this.globSeed, name, n);
              ~~~~~~~~

src/world/block_type.js:28:17 - error TS2322: Type 'string | ConfigObj' is not assignable to type 'string'.
  Type 'ConfigObj' is not assignable to type 'string'.

28       config = {name: config};
                   ~~~~

src/world/block_type.js:31:5 - error TS2322: Type 'string | ConfigObj' is not assignable to type 'ConfigObj'.
  Type 'string' has no properties in common with type 'ConfigObj'.

31     this.config = config;
       ~~~~~~~~~~~

src/world/block_type.js:41:10 - error TS2339: Property 'transparent' does not exist on type 'BlockType'.

41     this.transparent ??= false;
            ~~~~~~~~~~~

src/world/block_type.js:42:10 - error TS2339: Property 'visible' does not exist on type 'BlockType'.

42     this.visible ??= true;
            ~~~~~~~

src/world/block_type.js:47:10 - error TS2339: Property 'textures' does not exist on type 'BlockType'.

47     this.textures ??= {};
            ~~~~~~~~

src/world/block_type.js:48:18 - error TS2339: Property 'textures' does not exist on type 'BlockType'.

48     let d = this.textures?.all ?? this.texture;
                    ~~~~~~~~

src/world/block_type.js:48:40 - error TS2339: Property 'texture' does not exist on type 'BlockType'.

48     let d = this.textures?.all ?? this.texture;
                                          ~~~~~~~

src/world/block_type.js:49:22 - error TS2339: Property 'textures' does not exist on type 'BlockType'.

49     setDefaults(this.textures, fromKeys(['top', 'side', 'bottom'], d));
                        ~~~~~~~~

src/world/block_type.js:67:5 - error TS2322: Type 'number' is not assignable to type 'BlockType'.

67     Blocks.count = Blocks.n = this.BlockByNum.length;
       ~~~~~~~~~~~~

src/world/block_type.js:67:20 - error TS2322: Type 'number' is not assignable to type 'BlockType'.

67     Blocks.count = Blocks.n = this.BlockByNum.length;
                      ~~~~~~~~


src/world/generation.js:111:57 - error TS2363: The right-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type.

111         this.w.setBlock([x, 0, z], Blocks[(x + z + 1) % Blocks.count]);
                                                            ~~~~~~~~~~~~

src/world/index.js:4:1 - error TS2308: Module "./chunk.js" has already exported a member named 'Vec3'. Consider explicitly re-exporting to resolve the ambiguity.

4 export * from "./octave_noise.js";
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/world/tree_generation.js:16:16 - error TS2339: Property 'seed' does not exist on type 'TreePlacer'.

16           this.seed, this.wSize[0], this.wSize[2],
                  ~~~~

src/world/tree_generation.js:38:5 - error TS2322: Type 'number[][]' is not assignable to type '[number, number][]'.
  Type 'number[]' is not assignable to type '[number, number]'.
    Target requires 2 element(s) but source may have fewer.

38     this.excludeOffsets = rangeFrom(-w, w+1)
       ~~~~~~~~~~~~~~~~~~~


src/world/world.js:24:5 - error TS2322: Type 'RecursiveArray<Chunk>' is not assignable to type 'Chunk[][][]'.
  Type 'Chunk | RecursiveArray<Chunk>' is not assignable to type 'Chunk[][]'.
    Type 'Chunk' is missing the following properties from type 'Chunk[][]': length, pop, push, concat, and 28 more.

24     this.chunks = fromNested(this.nChunks, chunk_i => {
       ~~~~~~~~~~~


src/world/world.js:26:69 - error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'Vec3'.
  Target requires 3 element(s) but source may have fewer.

26       return new Chunk(this, vec3.mul([], this.chunkSize, chunk_i), cSize)
                                                                       ~~~~~



Found 34 errors.